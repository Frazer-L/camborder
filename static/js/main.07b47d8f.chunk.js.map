{"version":3,"sources":["components/Header.js","components/ColorPicker.js","components/TimeSlider.js","components/WebCamBorder.js","Home.js","Border.js","HowToPage.js","App.js","index.js"],"names":["Header","class","style","backgroundColor","className","id","href","fontFamily","ColorPicker","props","interactive","placement","content","color","onChange","hex","title","TimeSlider","Slider","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","onChangeCommitted","e","v","step","min","max","WebCamBorder","width","height","backgroundImage","color1","color2","color3","color4","backgroundSize","animation","time","Home","currentURL","window","location","useState","c1","setC1","c2","setC2","c3","setC3","c4","setC4","setTime","webcamBorderURL","substring","copied","setCopied","useEffect","text","onCopy","Border","useParams","HowToPage","App","ReactGA","initialize","pageview","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b47d8f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav class=\"navbar navbar-expand-md navbar-light\" style={{backgroundColor: \"#ddd\"}}>\r\n    <div class=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\r\n      \r\n    </div>\r\n    <div class=\"mx-auto order-0\">\r\n      <div className=\"container\"><a class=\"navbar-brand mx-auto\" id=\"navbarTitle\" href=\"/\" style={{fontFamily: 'Staatliches'}}>camborder.com</a></div>\r\n    </div>\r\n    <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" id=\"navbarHowTo\" href=\"/#/howto\">How to use</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n\r\n    // <header>\r\n    //   <h1>\r\n    //       OBS border generator\r\n    //   </h1>\r\n    // </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { ChromePicker } from \"react-color\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\n\r\nexport default function ColorPicker(props){\r\n  return(<div>\r\n          <Tippy\r\n            interactive={true}\r\n            placement={'bottom'}\r\n            content={\r\n              <ChromePicker color={props.color} onChange={color => props.onChange(color.hex)} />\r\n            }\r\n          >\r\n            <button className=\"ref-button\" style={{ backgroundColor: props.color }}>\r\n              {props.title}\r\n            </button>\r\n          </Tippy>\r\n        </div>)\r\n\r\n}\r\n","import React from 'react'\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\n\r\nexport default function TimeSlider(props){\r\n\r\n  return( \r\n    <div>\r\n    <Slider\r\n            defaultValue={10}\r\n            getAriaValueText={value => `${value}s`}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            onChangeCommitted={(e, v) => props.onChange(`${v}s`)}\r\n            step={1}\r\n            min={1}\r\n            max={600}\r\n          />\r\n    </div>\r\n  )\r\n}","import React from 'react' \r\nimport \"../styles.css\"\r\n\r\nexport default function WebCamBorder(props){\r\n  return(\r\n    <div className=\"borderCSS\"\r\n    style={{\r\n      width: props.width,\r\n      height: props.height,\r\n      backgroundImage: `linear-gradient(45deg, ${props.color1},\r\n          ${props.color2},\r\n          ${props.color3}, \r\n          ${props.color4},\r\n          ${props.color1},\r\n          ${props.color2})`,\r\n      backgroundSize: \"800% 800%\",\r\n      animation: `gradient ${props.time} linear infinite`\r\n    }}\r\n  ></div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport ColorPicker from \"./components/ColorPicker\";\r\nimport TimeSlider from \"./components/TimeSlider\";\r\n\r\nimport WebCamBorder from \"./components/WebCamBorder\";\r\n\r\nexport default function Home() {\r\n  const currentURL = window.location.href;\r\n\r\n  const [c1, setC1] = useState(\"#ee7752\");\r\n  const [c2, setC2] = useState(\"#e73c7e\");\r\n  const [c3, setC3] = useState(\"#23a6d5\");\r\n  const [c4, setC4] = useState(\"#23d5ab\");\r\n  const [time, setTime] = useState(\"10s\");\r\n  const webcamBorderURL = `${currentURL}border/${c1.substring(\r\n    1\r\n  )}/${c2.substring(1)}/${c3.substring(1)}/${c4.substring(1)}/${time}`;\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCopied(false);\r\n  }, [webcamBorderURL]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"centered\">\r\n        <div className=\"sliderDiv\">\r\n          <h6>{`Animation time (${time}):`}</h6>\r\n          <TimeSlider onChange={setTime} />\r\n        </div>\r\n        <ColorPicker color={c1} onChange={setC1} title=\"COLOR 1\" />\r\n        <ColorPicker color={c2} onChange={setC2} title=\"COLOR 2\" />\r\n        <ColorPicker color={c3} onChange={setC3} title=\"COLOR 3\" />\r\n        <ColorPicker color={c4} onChange={setC4} title=\"COLOR 4\" />\r\n      </div>\r\n\r\n      <p className=\"grey preview\">preview:</p>\r\n      <WebCamBorder\r\n        color1={c1}\r\n        color2={c2}\r\n        color3={c3}\r\n        color4={c4}\r\n        width=\"400px\"\r\n        height=\"300px\"\r\n        time={time}\r\n      />\r\n      <div className=\"centered copytoclipboard\">\r\n        <CopyToClipboard text={webcamBorderURL} onCopy={() => setCopied(true)}>\r\n          <p>{webcamBorderURL}</p>\r\n        </CopyToClipboard>\r\n\r\n        {copied && <span className=\"grey\">Copied to clipboard!</span>}\r\n      </div>\r\n      {!copied && <p className=\"grey\"> ↑ click to copy to clipboard ↑ </p>}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './styles.css'\r\nimport WebCamBorder from './components/WebCamBorder'\r\n\r\n\r\nexport default function Border() {\r\n  const { c1 } = useParams();\r\n  const { c2 } = useParams();\r\n  const { c3 } = useParams();\r\n  const { c4 } = useParams();\r\n  const { time } = useParams();\r\n\r\n  return (\r\n    <WebCamBorder \r\n    color1={`#${c1}`}\r\n    color2={`#${c2}`}\r\n    color3={`#${c3}`}\r\n    color4={`#${c4}`}\r\n    width=\"800px\"\r\n    height=\"600px\"\r\n    time={time}\r\n  />\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nexport default function HowToPage(){\r\n    const customCSS = \"body { background-color: rgba(0, 0, 0, 0); margin: 0px auto; overflow: hidden; }\"\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <div className=\"howtopar\">\r\n                <p>\r\n                    1) Choose your desired colors and animation time.\r\n                </p>\r\n                <p>\r\n                    2) Once you're happy with your settings <strong>copy the link</strong> generated below the preview.\r\n                </p>\r\n                <p>\r\n                    3) In OBS add a new source > browser source. Use the link you copied as the URL for the browser source. \r\n                </p>\r\n                <p>\r\n                    Make sure to use the following settings:\r\n                </p>\r\n                <p style={{fontFamily: \"Monospace\"}}>\r\n                    Width: 800px     \r\n                    <br/>\r\n                    Height: 600px\r\n                    <br/> \r\n                    <br/>\r\n                    Custom CSS: <br/>\r\n                    {`body { background-color: rgba(0, 0, 0, 0); margin: 0px auto; overflow: hidden; }`}\r\n                    <br/>\r\n                </p>\r\n                <p>\r\n                    Tip: <strong>You can adjust the size, aspect-ratio and border width</strong> by dragging to resize the border inside OBS. (Hold Alt to crop the edges to make the border width smaller!)\r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useEffect } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport ReactGA from 'react-ga';\n\nimport \"./styles.css\";\n\nimport Home from \"./Home\";\nimport Border from \"./Border\";\nimport HowToPage from './HowToPage'\n\nexport default function App() {\n\n  useEffect(()=> {\n    ReactGA.initialize(\"UA-186475779-1\")\n    ReactGA.pageview('/')\n  },[])\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        \n        <Route path=\"/howto\" exact>\n          <HowToPage />\n        </Route>\n\n        <Route path=\"/border/:c1/:c2/:c3/:c4/:time\">\n          <Border />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}